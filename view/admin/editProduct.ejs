<%- include('../partials/header')%>
    <%- include('../partials/sidebar')%>


        <div class="page-body">
            <!-- New Product Add Start -->
            <form id="editProductForm" action="/admin/editProduct/<%= data._id%>" method="post"
                enctype="multipart/form-data">

                <div class="container-fluid">
                    <div class="row theme-form theme-form-2 mega-form">
                        <div class="col-12">
                            <div class="row">
                                <div class="col-sm-8 m-auto">
                                    <div class="card">
                                        <div class="card-body">
                                            <div class="card-header-2">
                                                <h5>Product Information</h5>
                                            </div>


                                            <div class="mb-4 row align-items-center">
                                                <label class="form-label-title col-sm-3 mb-0">Product Name</label>
                                                <div class="col-sm-9">
                                                    <input class="form-control" type="text" placeholder="Product Name"
                                                        name="ProductName" value="<%= data.name%>" id="productName"
                                                        oninput="clearErrorMessage('productNameError')">
                                                    <span id="productNameError" class="text-danger"></span>
                                                    <!-- Error message element -->
                                                </div>
                                            </div>




                                            <div class="mb-4 row align-items-center">
                                                <label class="col-sm-3 col-form-label form-label-title">Category</label>
                                                <div class="col-sm-9">
                                                    <select class="js-example-basic-single w-100" name="category">
                                                        <option disabled>Category Menu</option>
                                                        <% cat.forEach((value)=> { %>
                                                            <option value="<%= value.category %>">
                                                                <%= value.category %>
                                                            </option>
                                                            <% }) %>
                                                    </select>
                                                </div>
                                            </div>





                                            <div class="mb-4 row align-items-center">
                                                <label class="form-label-title col-sm-3 mb-0">Brand</label>
                                                <div class="col-sm-9">
                                                    <input class="form-control" type="text" placeholder="Brand Name"
                                                        name="brandName" id="brandNameInput" value="<%= data.brand%>">
                                                    <span id="brandNameError" class="text-danger"></span>
                                                    <!-- Error message element -->
                                                </div>
                                            </div>


                                            <div class="mb-4 row align-items-center">
                                                <label class="form-label-title col-sm-3 mb-0">Quantity</label>
                                                <div class="col-sm-9">
                                                    <input class="form-control" type="text"
                                                        placeholder="Product Quantity" name="quantity"
                                                        id="quantityInput" value="<%=data.quantity%>">
                                                    <span id="quantityError" class="text-danger"></span>
                                                    <!-- Error message element -->
                                                </div>
                                            </div>


                                            <div class="mb-4 row align-items-center">
                                                <label class="col-sm-3 col-form-label form-label-title">Featured
                                                    Product</label>
                                                <div class="col-sm-9">
                                                    <select class="js-example-basic-single w-100" name="featurdStatus"
                                                        for="featuredProduct">

                                                        <option value="false">No</option>
                                                        <option value="true">Yes</option>


                                                    </select>
                                                </div>
                                            </div>



                                        </div>
                                    </div>


                                    <div class="card">
                                        <div class="card-body">
                                            <div class="card-header-2">
                                                <h5>Product Specifiction</h5>
                                            </div>



                                            <div class="mb-4 row align-items-center">
                                                <label class="form-label-title col-sm-3 mb-0">Model</label>
                                                <div class="col-sm-9">
                                                    <input class="form-control" type="text" placeholder="Product ram"
                                                        name="Model" value="<%=data.model%>">
                                                </div>
                                            </div>
                                            <div class="mb-4 row align-items-center">
                                                <label class="form-label-title col-sm-3 mb-0">Ram</label>
                                                <div class="col-sm-9">
                                                    <input class="form-control" type="text" placeholder="Product ram"
                                                        name="ram" value="<%=data.ram%>">
                                                </div>
                                            </div>
                                            <div class="mb-4 row align-items-center">
                                                <label class="form-label-title col-sm-3 mb-0">Storage Space</label>
                                                <div class="col-sm-9">
                                                    <input class="form-control" type="text" placeholder="Product Rom "
                                                        name="rom" value="<%=data.rom%>">
                                                </div>
                                            </div>



                                            <div class="mb-4 row align-items-center">
                                                <label class="form-label-title col-sm-3 mb-0">Processor</label>
                                                <div class="col-sm-9">
                                                    <input class="form-control" type="text"
                                                        placeholder="Product Processor" name="processor"
                                                        value="<%=data.processor%>">
                                                </div>
                                            </div>



                                        </div>
                                    </div>

                                    <div class="card">
                                        <div class="card-body">
                                            <div class="card-header-2">
                                                <h5>Description</h5>
                                            </div>

                                            <div class="mb-4 row align-items-center">
                                                <label class="form-label-title col-sm-3 mb-0">description</label>
                                                <div class="col-sm-9">
                                                    <input class="form-control" type="text" placeholder="Write here.."
                                                        name="description" value="<%=data.description%>">
                                                </div>
                                            </div>

                                        </div>
                                    </div>



                                    <div class="card">
                                        <div class="card-body">
                                            <div class="card-header-2">
                                                <h5>Product Images</h5>
                                            </div>


                                            <div class="mb-4 row align-items-center">
                                                <label class="col-sm-3 col-form-label form-label-title">Images</label>
                                                <div class="col-sm-9">
                                                    <% data.productImages.forEach((image, index)=> { %>
                                                        <img src="/images/<%= image %>" class="img-fluid"
                                                            style="width: 20%;">
                                                        <button class="btn-close btn-sm  horizontal-button"
                                                            onclick="deleteImage('<%= image %>', '<%= index %>' , '<%= data._id%>')"></button>

                                                        <% }) %>
                                                            <input class="form-control form-choose" type="file"
                                                                id="formFile" name="productImages" multiple>
                                                </div>
                                                <span>(up to 4 images)</span>
                                            </div>

                                            <div class="card">
                                                <div class="card-body">
                                                    <div class="card-header-2">
                                                        <h5>Product Price</h5>
                                                    </div>


                                                    <div class="mb-4 row align-items-center">
                                                        <label class="col-sm-3 form-label-title">Price</label>
                                                        <div class="col-sm-9">
                                                            <input class="form-control" type="number" placeholder="0"
                                                                name="price" id="price" value="<%=data.price%>">
                                                            <span id="priceError" class="text-danger"></span>
                                                            <!-- Error message element -->
                                                        </div>
                                                    </div>


                                                    <div class="mb-4 row align-items-center">
                                                        <label class="col-sm-3 form-label-title">Discount offer</label>
                                                        <div class="col-sm-9">
                                                            <input class="form-control" type="number" placeholder="0"
                                                                name="discountPercentage" id="discountPercentage"
                                                                value="<%=data.offer%>">
                                                            <span id="DiscountError" class="text-danger"></span>
                                                        </div>
                                                    </div>


                                                </div>
                                            </div>

                                            <div class="col-4 col-3 ">
                                                <button type="submit" class="btn btn-primary w-70  h-100 ">Edit
                                                    Product</button>
                                            </div>

                                            <br>

                                        </div>
                                    </div>
                                </div>

                            </div>

                        </div>

                    </div>
            </form>
        </div>
        <script>
            // Get the form element
            const form = document.getElementById('editProductForm');
        
            // Add event listener for form submission
            form.addEventListener('submit', function(event) {
                // Prevent the default form submission
                event.preventDefault();
        
                // Clear all existing error messages
                clearErrorMessages();
        
                const quantityValue = document.getElementById('quantityInput').value.trim();
                const quantityError = document.getElementById('quantityError');
                const productName = document.getElementById('productName').value.trim();
                const productNameError = document.getElementById('productNameError');
                const brandNameValue = document.getElementById('brandNameInput').value.trim();
                const brandNameError = document.getElementById('brandNameError');
                const discountValue = document.getElementById('discountPercentage').value.trim();
                const discountError = document.getElementById('discountError');
        
                let hasErrors = false; // Flag to track if any errors are found
        
                // Get the price input value
                const priceInput = document.getElementById('price');
                const price = parseFloat(priceInput.value); // Parse the input value to a floating-point number
        
                // Check if the price is negative
                if (price < 0) {
                    const priceError = document.getElementById('priceError');
                    priceError.textContent = 'Price cannot be negative';
                    hasErrors = true;
                }
        
                if (productName === '') {
                    productNameError.textContent = 'Product Name is required';
                    hasErrors = true;
                }
        
                if (quantityValue === '' || isNaN(quantityValue) || parseInt(quantityValue) <= 0) {
                    quantityError.textContent = 'Quantity must be a number greater than zero';
                    hasErrors = true;
                }
        
                if (brandNameValue === '' || !stringRegex.test(brandNameValue)) {
                    brandNameError.textContent = 'Brand Name is required and should only contain letters';
                    hasErrors = true;
                }


                

                if (discountValue !== '' && (isNaN(discountValue) || discountValue < 0 || discountValue > 100)) {
                    discountError.textContent = 'Discount must be a number between 0 and 100';
                    hasErrors = true;
                }
                // If errors are found, prevent form submission
                if (hasErrors) {
                    return false;
                }
               
//                 const stringRegex = /^[a-zA-Z\s]+$/;

        
                // If no errors, submit the form
                form.submit();
            });
        
            // Function to clear all error messages
            function clearErrorMessages() {
                const errorElements = document.querySelectorAll('.text-danger');
                errorElements.forEach(element => {
                    element.textContent = '';
                });
            }
        </script>
        
        
        <script>

// document.getElementById('editProductForm').addEventListener('submit', function (event) {
//     event.preventDefault(); // Prevent form submission if validation fails
//     const isFormValid = validateForm(); // Validate the form
    
//     if (isFormValid) {
//         alert("success");
//         // Form is valid, no need to remove event listener, just allow default form submission
//         event.target.submit(); // Submit the form
//     }
// });



//             function validateForm() {
//                 const isProductNameValid = validateProductName();
//                 const isQuantityValid = validateQuantity();
//                 const isBrandNameValid = validateBrandName();
//                 const isDiscountValid = validateDiscountOffer();
//                 const isPriceValid = validatePrice();

//                 return isProductNameValid && isQuantityValid && isBrandNameValid && isDiscountValid && isPriceValid;
//             }

//             function validateProductName() {
//                 alert("name")
//                 const productName = document.getElementById('productName').value.trim();
//                 const productNameError = document.getElementById('productNameError');

//                 if (productName === '') {
//                     productNameError.textContent = 'Product Name is required';
//                     return false;
//                 } else {
//                     productNameError.textContent = '';
//                     return true;
//                 }
//             }

//             function validateQuantity() {
//                 alert("qry")
//                 const quantityValue = document.getElementById('quantityInput').value.trim();
//                 const quantityError = document.getElementById('quantityError');

//                 if (quantityValue === '' || isNaN(quantityValue) || parseInt(quantityValue) <= 0) {
//                     quantityError.textContent = 'Quantity must be a number greater than zero';
//                     return false;
//                 } else {
//                     quantityError.textContent = '';
//                     return true;
//                 }
//             }

//             function validateBrandName() {
//                 alert("brand")
//                 const brandNameValue = document.getElementById('brandNameInput').value.trim();
//                 const brandNameError = document.getElementById('brandNameError');
//                 const stringRegex = /^[a-zA-Z\s]+$/;

//                 if (brandNameValue === '' || !stringRegex.test(brandNameValue)) {
//                     brandNameError.textContent = 'Brand Name is required and should only contain letters';
//                     return false;
//                 } else {
//                     brandNameError.textContent = '';
//                     return true;
//                 }
//             }

//             // function validatePrice() {
//             //     alert("price")
//             //     const priceInput = document.getElementById('price');
//             //     const price = parseFloat(priceInput.value);

//             //     const priceError = document.getElementById('priceError');

//             //     if (isNaN(price) || price <= 0) {
//             //         priceError.textContent = 'Price must be a valid number greater than zero';
//             //         priceInput.classList.add('is-invalid');
//             //         return false;
//             //     } else {
//             //         priceError.textContent = '';
//             //         priceInput.classList.remove('is-invalid');
//             //         return true;
//             //     }
//             // }

//             function validateDiscountOffer() {
//                 alert("offer")
//                 const discountValue = document.getElementById('discountPercentage').value.trim();
//                 const discountError = document.getElementById('discountError');

//                 if (discountValue !== '' && (isNaN(discountValue) || discountValue < 0 || discountValue > 100)) {
//                     discountError.textContent = 'Discount must be a number between 0 and 100';
//                     return false;
//                 } else {
//                     discountError.textContent = '';
//                     return true;
//                 }
//             }

        </script>

        <!-- <script>

            function clearErrorMessage(inputId) {
                const errorElement = document.getElementById(inputId);
                errorElement.textContent = '';
            }

            function validateForm() {

                const isProductNameValid = validateProductName();
                const isQuantityValid = validateQuantity();
                const isBrandNameValid = validateBrandName();
                const isDiscountValid = validateDiscountOffer();
                const isValidatePrice = validatePrice();

                if (isProductNameValid && isQuantityValid && isBrandNameValid && isDiscountValid && isValidatePrice) {
                    return true;
                } else {
                    preventDefault();
                    // return false;
                }
            }

            function validateProductName() {
                alert("name")
                const productName = document.getElementById('productName').value.trim();
                alert(productName)
                const productNameError = document.getElementById('productNameError');

                if (productName === '') {
                    productNameError.textContent = 'Product Name is required';
                    return false;
                } else {
                    productNameError.textContent = '';
                    return true;
                }
            }

            function validateQuantity() {
                alert("quantity")
                const quantityValue = document.getElementById('quantityInput').value.trim();
                const quantityError = document.getElementById('quantityError');

                if (quantityValue === '' || isNaN(quantityValue) || parseInt(quantityValue) <= 0) {
                    quantityError.textContent = 'Quantity must be a number greater than zero';
                    return false;
                } else {
                    quantityError.textContent = '';
                    return true;
                }
            }

            function validateBrandName() {
                alert("brand")
                const brandNameValue = document.getElementById('brandNameInput').value.trim();
                const brandNameError = document.getElementById('brandNameError');
                const stringRegex = /^[a-zA-Z\s]+$/;

                if (brandNameValue === '' || !stringRegex.test(brandNameValue)) {
                    brandNameError.textContent = 'Brand Name is required and should only contain letters';
                    return false;
                } else {
                    brandNameError.textContent = '';
                    return true;
                }
            }

            function validatePrice() {
             console.log("price");
                const priceInput = document.getElementById('price');
                const price = parseFloat(priceInput.value);

                const priceError = document.getElementById('priceError');

                if (isNaN(price) || price <= 0) {
                    priceError.textContent = 'Price must be a valid number greater than zero';
                    priceInput.classList.add('is-invalid');
                    return false;
                } else {
                    priceError.textContent = '';
                    priceInput.classList.remove('is-invalid');
                    return true;
                }
            }

            function validateDiscountOffer() {
                alert("offer")
                const discountValue = document.getElementById('discountPercentage').value.trim();
                const discountError = document.getElementById('discountError');

                if (discountValue !== '' && (isNaN(discountValue) || discountValue < 0 || discountValue > 100)) {
                    discountError.textContent = 'Discount must be a number between 0 and 100';
                    return false;
                } else {
                    discountError.textContent = '';
                    return true;
                }
            }
        </script> -->

        <!-- <script>

            function clearErrorMessage(inputId) {
                const errorElement = document.getElementById(inputId);
                errorElement.style.display = 'none'; // Hide error message when input is provided
            }

            function validateProductName() {
                const productName = document.querySelector('input[name="ProductName"]').value.trim();
                const productNameError = document.getElementById('productNameError');

                if (productName === '') {
                    productNameError.textContent = 'Product Name is required'; // Display error message
                    return false;
                } else {
                    productNameError.textContent = ''; // Clear error message if valid
                    return true;
                }
            }

            function validateQuantity() {
                const quantityValue = document.getElementById('quantityInput').value.trim();
                const quantityError = document.getElementById('quantityError');

                // Check if quantityValue is a number greater than zero
                if (quantityValue === '' || isNaN(quantityValue) || parseInt(quantityValue) <= 0) {
                    quantityError.textContent = 'Quantity must be a number and greater than zero';
                    return false;
                } else {
                    quantityError.textContent = '';
                    return true;
                }
            }



            function validateCategory() {
                // Validation logic for Category
            }

            function validateBrandName() {
                const brandNameValue = document.getElementById('brandNameInput').value.trim();
                const brandNameError = document.getElementById('brandNameError');
                const stringRegex = /^[a-zA-Z\s]+$/; // Regular expression for strings

                // Check if brandNameValue contains only letters
                if (!brandNameValue === '' || !stringRegex.test(brandNameValue)) {
                    brandNameError.textContent = 'Brand Name is required and should only contain letters';
                    return false;
                } else {
                    brandNameError.textContent = '';
                    return true;
                }
            }

            function validatePositiveNumber(inputId, errorId, errorMessage) {
                const inputValue = document.getElementById(inputId).value.trim();
                const errorElement = document.getElementById(errorId);
                const numberValue = parseFloat(inputValue); // Convert input to a number

                if (inputValue === '' || isNaN(numberValue) || numberValue <= 0) {
                    errorElement.textContent = errorMessage;
                    document.getElementById(inputId).classList.add('is-invalid');
                    return false;
                } else {
                    errorElement.textContent = '';
                    document.getElementById(inputId).classList.remove('is-invalid');
                    return true;
                }
            }

            function validateDiscountOffer() {
                const discountInput = document.querySelector('input[name="discountPercentage"]');
                const discountValue = discountInput.value.trim();
                const discountError = document.getElementById('discountError');

                // Check if the value is not empty and doesn't contain non-numeric characters
                if (discountValue !== '' && isNaN(discountValue)) {
                    discountError.textContent = 'Discount must be a number';
                    return false;
                }

                // Convert the value to a number for further checks
                const discountNumber = parseFloat(discountValue);

                // Check if the value is within the specified range
                if (discountValue !== '' && (discountNumber < 0 || discountNumber > 100)) {
                    discountError.textContent = 'Discount must be between 0 and 100';
                    return false;
                }

                // Clear the error message if the input is valid
                discountError.textContent = '';
                return true;
            }






            // Add more validation functions for other fields as needed

            function validateForm() {
                // Run individual field validations
               
                const isQuantityValid = validateQuantity();
                const isDiscountValid = validateDiscountOffer();
                const isProductNameValid = validateProductName();
                const isCategoryValid = validateCategory();
                const isBrandNameValid = validateBrandName();
                // const isDiscountPriceValid = validatePositiveNumber('discountPercentage', 'discountError', 'Discount Price is required and should be a valid number greater than zero');
                // Add validations for other fields

                // Check overall form validity
                if (isProductNameValid && isCategoryValid && isBrandNameValid && isQuantityValid && isDiscountValid/* Add other field validations here if needed */) {
                    return true;
                } else {
                    event.preventDefault()
                }
            }

        </script> -->

        <script>

            async function deleteImage(image, index, productId) {
                try {
                    const response = await fetch('/admin/deleteImage', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ image, index, productId })
                    });

                    if (response.ok) {
                        const imageElement = document.querySelector(`img[src="/images/${image}"]`);

                        if (imageElement) {
                            imageElement.remove(); // Remove the image element from the DOM

                            window.location.reload();
                        }
                    } else {
                        console.error('Failed to delete the image');
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            }

        </script>


        <!-- New Product Add End -->


        <%- include('../partials/footer')%>